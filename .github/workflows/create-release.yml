name: Create release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Create release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code 
        uses: actions/checkout@v2

      - name: Merge tag into master (if tagged on another branch)
        uses: devmasx/merge-branch@master
        with:
          type: now
          head_to_merge: ${{ github.sha }}
          target_branch: master
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract release version number
        run: |
          echo "version_no=${ref_name//v/}" >> $GITHUB_ENV
        env:
          ref_name: ${{ github.ref_name }}

      - name: Update version numbers
        run: |
          sed -i -r "s/(^version:\s*).*/\1${{ env.version_no }}/" package.yaml
          sed -i -r "s/(^version:\s*).*/\1${{ env.version_no }}/" hyperpipe.cabal
          sed -i -r "s/(version = ).*/\1\"${{ env.version_no }}\";/" hyperpipe.nix

      - name: Commit changes
        run: |
          git pull origin master
          git config --local user.name "github-actions[bot]"
          git commit -a -m "Update version numbers to ${{ env.version_no }} [skip ci]"

      - name: Push updated files
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: master

      - name: Get most recent commit hash from master
        run: |
          git log -n 1 --pretty=format:"%H" | (echo -n "master_sha=" && cat) >> $GITHUB_ENV

      - name: Delete tag
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "tags/${{ github.ref_name }}"
            })

      - name: Re-add tag
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ github.ref_name }}",
              sha: "${{ env.master_sha }}"
            })

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body: |
            Changes in this release:
            - TODO describe changes

